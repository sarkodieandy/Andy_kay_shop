// <<<<<<< HEAD
// =======
// <<<<<<< HEAD

// // // buildscript {
// // //     repositories {
// // //         google()
// // //         mavenCentral()
// // //     }
// // //     dependencies {
// // //         classpath 'com.android.tools.build:gradle:8.3.2'
// // //         classpath 'com.google.gms:google-services:4.3.15'
// // //     }
// // // }


// // allprojects {
// //     repositories {
// //         google()
// //         mavenCentral()
// //         jcenter() // Optional: Only include if required for specific dependencies
// //     }
// // }

// // rootProject.buildDir = "../build"

// // // Adjust the build directories for all subprojects
// // subprojects {
// //     project.buildDir = "${rootProject.buildDir}/${project.name}"
// // }

// // // Ensure the ":app" project is evaluated before other subprojects
// // subprojects {
// //     afterEvaluate {
// //         if (project.name != "app") {
// //             evaluationDependsOn(":app")
// //         }
// //     }
// // }

// // // Register a clean task to delete the build directory
// // tasks.register("clean", Delete) {
// //     delete rootProject.buildDir
// // }

// plugins {
//     id "com.android.application"
//     // START: FlutterFire Configuration
//     id 'com.google.gms.google-services'
//     // END: FlutterFire Configuration
//     id "kotlin-android"
//     // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
//     id "dev.flutter.flutter-gradle-plugin"
// }

// android {
//     namespace = "com.example.e_shop"
//     compileSdk = flutter.compileSdkVersion
//     ndkVersion = flutter.ndkVersion
//     ndkVersion "25.1.8937393"

//     // compileOptions {
//     //     sourceCompatibility = JavaVersion.VERSION_1_8
//     //     targetCompatibility = JavaVersion.VERSION_1_8
//     // }

//     // kotlinOptions {
//     //     jvmTarget = JavaVersion.VERSION_1_8
//     // }
//     compileOptions {
//         sourceCompatibility JavaVersion.VERSION_17
//         targetCompatibility JavaVersion.VERSION_17
//     }
//     kotlinOptions {
//         jvmTarget = 17
//     }

//     defaultConfig {
//         // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//         applicationId = "com.example.e_shop"
//         // You can update the following values to match your application needs.
//         // For more information, see: https://flutter.dev/to/review-gradle-config.
//         minSdk = 23
//         // minSdk = flutter.minSdkVersion
//         targetSdk = flutter.targetSdkVersion
//         versionCode = flutter.versionCode
//         versionName = flutter.versionName
//     }

//     buildTypes {
//         release {
//             // TODO: Add your own signing config for the release build.
//             // Signing with the debug keys for now, so `flutter run --release` works.
//             signingConfig = signingConfigs.debug
//         }
//     }
// }

// flutter {
// //     source = "../.."
// // }
// =======
// // Include all projects in the settings
// include ':app'
// >>>>>>> 3466113715ba76a612c862e8c769e4884834165a

// >>>>>>> 2ef8d2e285c9fb020f324c471956aaf8cfd8f083
// // Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.3.2'
        classpath 'com.google.gms:google-services:4.3.15'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter() // Optional: Only include if required for specific dependencies
    }
}

rootProject.buildDir = "../build"

// Adjust the build directories for all subprojects
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}

// Ensure the ":app" project is evaluated before other subprojects
subprojects {
    afterEvaluate {
        if (project.name != "app") {
            evaluationDependsOn(":app")
        }
    }
}

// Register a clean task to delete the build directory
tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
